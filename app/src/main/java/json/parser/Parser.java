/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package json.parser;

import java.nio.file.Files;
import java.nio.file.Path;
import java.io.IOException;
import java.util.*;
import java.text.ParseException;

public class Parser {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new Parser().getGreeting());
    }

    public static void parse(String object) {
        try {
            List<JSONToken> tokens = lexicalAnalysis(object.trim());
            JSONObject obj = syntacticAnalysis(tokens);
            System.out.println(obj.toString());
            System.exit(1);
        } catch (ParseException e) {
            System.err.println(e);
            e.printStackTrace();
            System.exit(1);
        }
    };

    public static void parse(Path pathToFile) throws IOException {
        parse(Files.readString(pathToFile));
    }

    private static List<JSONToken> lexicalAnalysis(String object) throws ParseException {
        List<JSONToken> tokens = new ArrayList<>();
        int marker = 0;
        while (marker < object.length()) {
            char c = object.charAt(marker);
            switch (c) {
                case '{':
                case '}':
                case ',':
                    tokens.add(new JSONToken(String.valueOf(c)));
                    break;
                default:
                    throw new ParseException(String.format("Unexpected Token received: %c", c), marker);
            }
            marker++;
        }

        return tokens;
    }

    private static JSONObject syntacticAnalysis(List<JSONToken> tokens) {
        if (tokens.get(0).getType() == JSONTokenType.LeftBrace) {
            return parseObject(tokens, 1);
        } else {
            return new JSONObject();
        }
    }

    private static JSONObject parseObject(List<JSONToken> tokens, int startIndex) {
        JSONObject obj = new JSONObject();
        if (tokens.get(startIndex).getType() == JSONTokenType.RightBrace) {
            return obj;
        }
        return obj;
    }
}
